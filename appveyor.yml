environment:
  global:
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    WITH_COMPILER: "cmd /E:ON /V:ON /C C:\\project\\.ci\\appveyor\\run_with_compiler.cmd"

  matrix:
    - PYTHON: "C:\\Python26"
      PYTHON_VERSION: "2.6.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python26-x64"
      PYTHON_VERSION: "2.6.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python33"
      PYTHON_VERSION: "3.3.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python33-x64"
      PYTHON_VERSION: "3.3.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

build: false  # Not a C# project, build stuff at the test step instead.
clone_folder: c:\\project

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

  - ps: cd C:\\project

  # Install some additional Python modules which will be required by
  # the tests.  These can't be installed as part of the setup.py due
  # to file locking issues.  These are also requirements that are not
  # required outside of development.
  - "%WITH_COMPILER% %PYTHON%\\Scripts\\pip.exe install -r dev_requirements.txt --upgrade"

test_script:
  - ps: cd C:\\project
  - "%WITH_COMPILER% %PYTHON%\\python.exe setup.py sdist bdist_wheel bdist_msi"
  - "%WITH_COMPILER% %PYTHON%\\Scripts\\pip.exe install ."
  - ps: cd ..
  - "%WITH_COMPILER% %PYTHON%\\Scripts\\nosetests.exe --with-coverage --cover-package pywincffi -v C:\\project\\tests"

  # Covearge processing
  - "move .coverage C:\\project"
  - ps: cd C:\\project
  - "%PYTHON%\\Scripts\\coverage.exe xml"
  - "%PYTHON%\\Scripts\\codecov.exe --required"

artifacts:
  - path: dist\*.whl
  - path: dist\*.msi
  - path: dist\*.zip
  - path: .coverage
